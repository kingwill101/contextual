"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[745],{5942:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"advanced/batching-and-shutdown","title":"Batching and Shutdown","description":"Configure log batching for throughput and understand when to call Logger.shutdown.","source":"@site/docs/advanced/batching-and-shutdown.mdx","sourceDirName":"advanced","slug":"/advanced/batching-and-shutdown","permalink":"/contextual/advanced/batching-and-shutdown","draft":false,"unlisted":false,"editUrl":"https://github.com/kingwill101/contextual/edit/main/website/docs/advanced/batching-and-shutdown.mdx","tags":[],"version":"current","frontMatter":{"title":"Batching and Shutdown","description":"Configure log batching for throughput and understand when to call Logger.shutdown."},"sidebar":"docsSidebar","previous":{"title":"Middleware","permalink":"/contextual/advanced/middleware"},"next":{"title":"Type Formatters & Printers","permalink":"/contextual/advanced/type-formatters"}}');var a=i(4848),o=i(8453);const l={title:"Batching and Shutdown",description:"Configure log batching for throughput and understand when to call Logger.shutdown."},s="Batching and Shutdown",r={},c=[{value:"Defaults",id:"defaults",level:2},{value:"Enabling Batching",id:"enabling-batching",level:2},{value:"Shutdown Guidance",id:"shutdown-guidance",level:2},{value:"Driver Lifecycle",id:"driver-lifecycle",level:2},{value:"Batching Best Practices",id:"batching-best-practices",level:2},{value:"Example: Batched Logging with Type-Targeting",id:"example-batched-logging-with-type-targeting",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"batching-and-shutdown",children:"Batching and Shutdown"})}),"\n",(0,a.jsx)(e.p,{children:"Contextual provides optional batching to improve throughput for high-volume logging without forcing consumers to call shutdown() in typical applications."}),"\n",(0,a.jsx)(e.h2,{id:"defaults",children:"Defaults"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Batching is opt-in via ",(0,a.jsx)(e.code,{children:"LogConfig.batching"}),". By default, drivers log synchronously."]}),"\n",(0,a.jsx)(e.li,{children:"When batching is enabled, logs are queued to a central sink and flushed on a fixed interval and/or batch size."}),"\n",(0,a.jsx)(e.li,{children:"The sink automatically drains on process exit; explicit shutdown() is recommended for CLI/short-lived tasks."}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"enabling-batching",children:"Enabling Batching"}),"\n",(0,a.jsxs)(e.p,{children:["Configure batching through ",(0,a.jsx)(e.code,{children:"LogConfig"}),":"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    batching: BatchingConfig(\n      enabled: true,\n      batchSize: 50,\n      flushInterval: const Duration(milliseconds: 500),\n    ),\n    channels: [ConsoleChannel(ConsoleOptions(), name: 'console')],\n  ),\n);\n"})}),"\n",(0,a.jsxs)(e.p,{children:["Disable batching by omitting or setting ",(0,a.jsx)(e.code,{children:"enabled: false"}),":"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    batching: BatchingConfig(enabled: false),\n    channels: [ConsoleChannel(ConsoleOptions(), name: 'console')],\n  ),\n);\n"})}),"\n",(0,a.jsx)(e.h2,{id:"shutdown-guidance",children:"Shutdown Guidance"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Long-running servers (Shelf, Flutter, etc.): shutdown() is optional; use it when you perform coordinated shutdown for other resources."}),"\n",(0,a.jsx)(e.li,{children:"Short-lived scripts/CLIs: call await logger.shutdown() to ensure buffers are flushed."}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"await logger.info('Finishing up...');\nawait logger.shutdown();\n"})}),"\n",(0,a.jsx)(e.h2,{id:"driver-lifecycle",children:"Driver Lifecycle"}),"\n",(0,a.jsx)(e.p,{children:"Drivers may allocate resources (e.g. file handles, HTTP clients). Logger.shutdown() notifies drivers to close resources, then waits for completion before closing the sink."}),"\n",(0,a.jsx)(e.h2,{id:"batching-best-practices",children:"Batching Best Practices"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Default is unbatched for simplicity."}),"\n",(0,a.jsxs)(e.li,{children:["Enable batching in high-throughput apps via ",(0,a.jsx)(e.code,{children:"LogConfig.batching"}),"; it generally does not require explicit shutdown in typical server apps."]}),"\n",(0,a.jsxs)(e.li,{children:["For short-lived CLIs or when using file drivers, call ",(0,a.jsx)(e.code,{children:"await logger.shutdown()"})," to guarantee flush."]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"example-batched-logging-with-type-targeting",children:"Example: Batched Logging with Type-Targeting"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    batching: BatchingConfig(\n      enabled: true,\n      batchSize: 100,\n      flushInterval: const Duration(milliseconds: 500),\n    ),\n    channels: [ConsoleChannel(ConsoleOptions(), name: 'console')],\n  ),\n);\n\nlogger.forDriver<ConsoleLogDriver>().info('Fast batched logging');\n"})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>s});var t=i(6540);const a={},o=t.createContext(a);function l(n){const e=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);