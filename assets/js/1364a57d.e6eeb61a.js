"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[458],{5407:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/drivers/webhook","title":"Webhook Driver (API)","description":"Reference for the WebhookChannel and WebhookLogDriver configuration options.","source":"@site/docs/api/drivers/webhook.mdx","sourceDirName":"api/drivers","slug":"/api/drivers/webhook","permalink":"/contextual/api/drivers/webhook","draft":false,"unlisted":false,"editUrl":"https://github.com/kingwill101/contextual/edit/main/website/docs/api/drivers/webhook.mdx","tags":[],"version":"current","frontMatter":{"title":"Webhook Driver (API)","description":"Reference for the WebhookChannel and WebhookLogDriver configuration options."},"sidebar":"docsSidebar","previous":{"title":"Daily File Driver","permalink":"/contextual/api/drivers/daily-file"},"next":{"title":"Stack Driver","permalink":"/contextual/api/drivers/stack"}}');var o=r(4848),l=r(8453);const t={title:"Webhook Driver (API)",description:"Reference for the WebhookChannel and WebhookLogDriver configuration options."},s="Webhook Driver",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Options",id:"options",level:2},{value:"Usage",id:"usage",level:2},{value:"Typed configuration (recommended)",id:"typed-configuration-recommended",level:3},{value:"Targeting the webhook output",id:"targeting-the-webhook-output",level:3},{value:"By name",id:"by-name",level:4},{value:"By driver type",id:"by-driver-type",level:4},{value:"Headers (authentication, metadata)",id:"headers-authentication-metadata",level:2},{value:"Timeouts and keep-alive",id:"timeouts-and-keep-alive",level:2},{value:"Formatting",id:"formatting",level:2},{value:"Error handling and resilience",id:"error-handling-and-resilience",level:2},{value:"Sampling noisy logs",id:"sampling-noisy-logs",level:2},{value:"Middleware enrichment",id:"middleware-enrichment",level:2},{value:"Best practices",id:"best-practices",level:2},{value:"See also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"webhook-driver",children:"Webhook Driver"})}),"\n",(0,o.jsx)(n.p,{children:"Send logs to remote services over HTTP. The Webhook driver posts structured JSON log entries to an external endpoint (e.g., your logging service, Slack-compatible hooks, or a custom collector)."}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"HTTP/HTTPS delivery of structured JSON logs"}),"\n",(0,o.jsx)(n.li,{children:"Optional custom request headers (e.g., Authorization)"}),"\n",(0,o.jsx)(n.li,{children:"Configurable request timeout"}),"\n",(0,o.jsx)(n.li,{children:"Optional keep-alive for connection reuse"}),"\n",(0,o.jsx)(n.li,{children:"Works with any formatter (Pretty, Plain, JSON)"}),"\n",(0,o.jsx)(n.li,{children:"Composable with other outputs via the Stack driver"}),"\n",(0,o.jsx)(n.li,{children:"Plays nicely with middleware enrichment and sampling"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsxs)(n.p,{children:["Configure via ",(0,o.jsx)(n.code,{children:"WebhookOptions"})," (used by the typed ",(0,o.jsx)(n.code,{children:"WebhookChannel"}),"):"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"url"}),": ",(0,o.jsx)(n.code,{children:"Uri"})," (required)","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Destination endpoint for POST requests with JSON payloads."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"headers?"}),": ",(0,o.jsx)(n.code,{children:"Map<String, String>"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Custom request headers (e.g., Authorization, X-Service)."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"timeout?"}),": ",(0,o.jsx)(n.code,{children:"Duration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Default: 5 seconds"}),"\n",(0,o.jsx)(n.li,{children:"Maximum duration for an HTTP request."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"keepAlive?"}),": ",(0,o.jsx)(n.code,{children:"bool"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Default: false"}),"\n",(0,o.jsx)(n.li,{children:"Enables connection reuse for frequent logging."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"const options = WebhookOptions(\n  url: Uri.parse('https://logs.example.com/ingest'),\n  headers: {'Authorization': 'Bearer ${String.fromEnvironment(\"LOGS_TOKEN\")}'},\n  timeout: Duration(seconds: 4),\n  keepAlive: true,\n);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.h3,{id:"typed-configuration-recommended",children:"Typed configuration (recommended)"}),"\n",(0,o.jsxs)(n.p,{children:["Use the typed ",(0,o.jsx)(n.code,{children:"WebhookChannel"})," with ",(0,o.jsx)(n.code,{children:"WebhookOptions"})," for compile\u2011time safety and clarity:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"import 'package:contextual/contextual.dart';\n\nFuture<void> main() async {\n  final logger = await Logger.create(\n    config: LogConfig(\n      channels: [\n        WebhookChannel(\n          WebhookOptions(\n            url: Uri.parse('https://logs.example.com/ingest'),\n          ),\n          name: 'remote',\n        ),\n      ],\n    ),\n  );\n\n  logger.info('Hello from Contextual (webhook)!');\n}\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Name your channel (e.g., ",(0,o.jsx)(n.code,{children:"remote"}),") to target it later."]}),"\n",(0,o.jsx)(n.li,{children:"The payload is a structured JSON log entry (message, level, timestamp, and any context)."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"targeting-the-webhook-output",children:"Targeting the webhook output"}),"\n",(0,o.jsx)(n.h4,{id:"by-name",children:"By name"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"logger['remote']?.info('Only goes to the remote webhook');\n"})}),"\n",(0,o.jsx)(n.h4,{id:"by-driver-type",children:"By driver type"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"logger.forDriver<WebhookLogDriver>().warning('All webhook drivers receive this');\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"headers-authentication-metadata",children:"Headers (authentication, metadata)"}),"\n",(0,o.jsx)(n.p,{children:"Include custom headers for authentication or routing:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    channels: [\n      WebhookChannel(\n        WebhookOptions(\n          url: Uri.parse('https://logs.example.com/ingest'),\n          headers: {\n            'Authorization': 'Bearer ${String.fromEnvironment(\"LOGS_TOKEN\")}',\n            'X-Service': 'payments',\n          },\n        ),\n        name: 'remote',\n      ),\n    ],\n  ),\n);\n\nlogger.info('Payment processed', Context({\n  'order_id': 'ord_123',\n  'amount': 1999,\n  'currency': 'USD',\n}));\n"})}),"\n",(0,o.jsx)(n.p,{children:"Tip: Keep secrets out of source control\u2014load tokens from env vars or a secret manager."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"timeouts-and-keep-alive",children:"Timeouts and keep-alive"}),"\n",(0,o.jsx)(n.p,{children:"Tune for your environment:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    channels: [\n      WebhookChannel(\n        WebhookOptions(\n          url: Uri.parse('https://logs.example.com/ingest'),\n          timeout: const Duration(seconds: 3), // reduce tail latency\n          keepAlive: true,                      // reuse connections\n        ),\n        name: 'remote',\n      ),\n    ],\n  ),\n);\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Shorter timeouts reduce latency but may drop logs if the endpoint is slow."}),"\n",(0,o.jsx)(n.li,{children:"Keep-alive improves throughput for frequent logging."}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"formatting",children:"Formatting"}),"\n",(0,o.jsx)(n.p,{children:"Pick a formatter that matches your destination\u2019s expectations:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"PrettyLogFormatter: Human-friendly, colorized (dev/proxying)"}),"\n",(0,o.jsx)(n.li,{children:"PlainTextLogFormatter: Minimal overhead text"}),"\n",(0,o.jsx)(n.li,{children:"JsonLogFormatter: Structured logs for ingestion and indexing (recommended)"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Global (logger-wide) formatter:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    formatter: JsonLogFormatter(),\n    channels: [\n      WebhookChannel(\n        WebhookOptions(url: Uri.parse('https://logs.example.com/ingest')),\n        name: 'remote',\n      ),\n    ],\n  ),\n);\n"})}),"\n",(0,o.jsx)(n.p,{children:"Per-channel formatter:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    channels: [\n      WebhookChannel(\n        WebhookOptions(url: Uri.parse('https://logs.example.com/ingest')),\n        name: 'remote',\n        formatter: JsonLogFormatter(),\n      ),\n    ],\n  ),\n);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"error-handling-and-resilience",children:"Error handling and resilience"}),"\n",(0,o.jsx)(n.p,{children:"Network logging can fail\u2014design for resilience:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Keep a ",(0,o.jsx)(n.code,{children:"ConsoleChannel"})," as a fallback to surface errors locally"]}),"\n",(0,o.jsxs)(n.li,{children:["Use a ",(0,o.jsx)(n.code,{children:"StackChannel"})," to fan out to multiple destinations"]}),"\n",(0,o.jsxs)(n.li,{children:["Consider ",(0,o.jsx)(n.code,{children:"SamplingChannel"})," for noisy levels to reduce load"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    channels: [\n      // Fallback console output\n      ConsoleChannel(ConsoleOptions(), name: 'console'),\n\n      // Primary remote logging\n      WebhookChannel(\n        WebhookOptions(\n          url: Uri.parse('https://logs.example.com/ingest'),\n          headers: {'Authorization': 'Bearer ${String.fromEnvironment(\"LOGS_TOKEN\")}'},\n          timeout: const Duration(seconds: 4),\n          keepAlive: true,\n        ),\n        name: 'remote',\n      ),\n\n      // One channel that fans out to both console and remote\n      StackChannel(\n        StackOptions(\n          channels: ['console', 'remote'],\n          ignoreExceptions: true, // do not fail the entire stack if remote fails\n        ),\n        name: 'stack',\n      ),\n    ],\n  ),\n);\n\n// Use the stack for important messages that should go both places:\nlogger['stack']?.error('Critical failure', Context({'order_id': 'ord_777'}));\n"})}),"\n",(0,o.jsx)(n.p,{children:"If the endpoint is intermittently unavailable:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Keep console/file logging as a local fallback"}),"\n",(0,o.jsx)(n.li,{children:"Alert on repeated webhook failures on the receiver side"}),"\n",(0,o.jsx)(n.li,{children:"Consider a buffer/queue upstream of your HTTP endpoint"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"sampling-noisy-logs",children:"Sampling noisy logs"}),"\n",(0,o.jsx)(n.p,{children:"Reduce volume for lower-severity levels:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    channels: [\n      WebhookChannel(\n        WebhookOptions(url: Uri.parse('https://logs.example.com/ingest')),\n        name: 'remote',\n      ),\n      SamplingChannel(\n        SamplingOptions(\n          // Per-level sampling rates (0.0 to 1.0)\n          rates: {\n            Level.debug: 0.1, // keep 10% of debug logs\n            Level.info: 1.0,   // keep all info logs\n          },\n          wrappedChannel: 'remote', // wrap the named webhook channel\n        ),\n        name: 'remote_sampled',\n      ),\n    ],\n  ),\n);\n\n// Route specific logs to the sampled channel:\nlogger['remote_sampled']?.debug('This debug log may be sampled');\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"middleware-enrichment",children:"Middleware enrichment"}),"\n",(0,o.jsx)(n.p,{children:"Add contextual fields globally (env, version, request ID) for better traceability downstream:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    channels: [\n      WebhookChannel(\n        WebhookOptions(url: Uri.parse('https://logs.example.com/ingest')),\n        name: 'remote',\n      ),\n    ],\n    middlewares: [\n      () => {\n        'env': const String.fromEnvironment('APP_ENV', defaultValue: 'development'),\n        'version': '2.0.0',\n        'ts': DateTime.now().toIso8601String(),\n      },\n    ],\n  ),\n);\n\nlogger.info('Service started');\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Use HTTPS for all remote logging; never send sensitive data over HTTP."}),"\n",(0,o.jsx)(n.li,{children:"Authenticate with per-service tokens. Rotate regularly."}),"\n",(0,o.jsxs)(n.li,{children:["Prefer ",(0,o.jsx)(n.code,{children:"JsonLogFormatter"})," for machine-ingestible payloads."]}),"\n",(0,o.jsxs)(n.li,{children:["Set reasonable ",(0,o.jsx)(n.code,{children:"timeout"})," values based on environment and endpoint SLAs."]}),"\n",(0,o.jsxs)(n.li,{children:["Enable ",(0,o.jsx)(n.code,{children:"keepAlive"})," for high-throughput services to reduce connection overhead."]}),"\n",(0,o.jsx)(n.li,{children:"Avoid logging secrets or PII. Redact sensitive fields at the source or via middleware."}),"\n",(0,o.jsxs)(n.li,{children:["For high volume:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Sample noisy levels"}),"\n",(0,o.jsx)(n.li,{children:"Combine with file logging (Daily File driver) for durability"}),"\n",(0,o.jsx)(n.li,{children:"Use a Stack driver to fan-out to multiple destinations"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:"Monitor the receiver for errors/latency; alert on spikes and failures."}),"\n",(0,o.jsx)(n.li,{children:"Treat the webhook endpoint like an external dependency\u2014code defensively."}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/api/overview",children:"API Overview"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/api/drivers/configuration",children:"Driver Configuration"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/api/drivers/console",children:"Console Driver"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/api/drivers/daily-file",children:"Daily File Driver"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/advanced/middleware",children:"Middleware (advanced)"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/advanced/batching-and-shutdown",children:"Batching & Shutdown"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>s});var i=r(6540);const o={},l=i.createContext(o);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);