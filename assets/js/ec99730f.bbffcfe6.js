"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[209],{2373:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"next-steps","title":"Next Steps","description":"What to do after getting started with Contextual","source":"@site/docs/next-steps.mdx","sourceDirName":".","slug":"/next-steps","permalink":"/contextual/next-steps","draft":false,"unlisted":false,"editUrl":"https://github.com/kingwill101/contextual/edit/main/website/docs/next-steps.mdx","tags":[],"version":"current","frontMatter":{"title":"Next Steps","description":"What to do after getting started with Contextual"},"sidebar":"docsSidebar","previous":{"title":"Usage","permalink":"/contextual/usage"},"next":{"title":"API Overview","permalink":"/contextual/api/overview"}}');var o=t(4848),i=t(8453);const s={title:"Next Steps",description:"What to do after getting started with Contextual"},a=void 0,l={},d=[{value:"Common Next Steps",id:"common-next-steps",level:2},{value:"Add Structured Context",id:"add-structured-context",level:3},{value:"Configure Multiple Outputs",id:"configure-multiple-outputs",level:3},{value:"Add Middleware",id:"add-middleware",level:3},{value:"Handle Shutdown Properly",id:"handle-shutdown-properly",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Now that you've set up basic logging with Contextual, here are some next steps to enhance your logging setup:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/api/overview",children:"API Reference"})}),": Dive deeper into Contextual's classes, methods, and configuration options."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/advanced/middleware",children:"Advanced Features"})}),": Learn about middleware for transforming logs, batching for performance, and integrating with frameworks like Shelf."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/api/drivers/daily-file",children:"Driver Guides"})}),": Explore specific drivers for file logging, webhooks, and more."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/migration/v2",children:"Migration Guide"})}),": If upgrading from v1, see how to migrate your code to the new typed APIs."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/advanced/type-formatters",children:"Type Formatters & Printers"})}),": Customize how domain objects and structured data appear in logs."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"common-next-steps",children:"Common Next Steps"}),"\n",(0,o.jsx)(n.h3,{id:"add-structured-context",children:"Add Structured Context"}),"\n",(0,o.jsx)(n.p,{children:"Enhance your logs with rich context for better debugging:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"logger.withContext({\n  'user_id': currentUser.id,\n  'request_id': generateRequestId(),\n  'environment': 'production',\n}).info('Processing payment');\n"})}),"\n",(0,o.jsx)(n.h3,{id:"configure-multiple-outputs",children:"Configure Multiple Outputs"}),"\n",(0,o.jsx)(n.p,{children:"Send logs to different destinations based on environment:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final config = LogConfig(\n  environment: 'production',\n  channels: [\n    ConsoleChannel(ConsoleOptions(), name: 'console'), // For development\n    DailyFileChannel(DailyFileOptions(path: 'logs/app'), name: 'file'), // For production\n    WebhookChannel(WebhookOptions(url: Uri.parse('https://logs.example.com')), name: 'remote'), // For monitoring\n  ],\n);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"add-middleware",children:"Add Middleware"}),"\n",(0,o.jsx)(n.p,{children:"Transform or filter logs automatically:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(\n  config: LogConfig(\n    channels: [ConsoleChannel(ConsoleOptions(), name: 'console')],\n    middlewares: [\n      () => {'timestamp': DateTime.now().toIso8601String()},\n      ErrorEnhancer(), // Custom middleware\n    ],\n  ),\n);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"handle-shutdown-properly",children:"Handle Shutdown Properly"}),"\n",(0,o.jsx)(n.p,{children:"Ensure logs are written before your app exits:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"final logger = await Logger.create(/* config with file drivers */);\n\ntry {\n  // Your application logic\n} finally {\n  await logger.shutdown();\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For more examples and best practices, check out the ",(0,o.jsx)(n.a,{href:"/api/overview",children:"API Reference"}),", ",(0,o.jsx)(n.a,{href:"/advanced/middleware",children:"Advanced Topics"}),", and ",(0,o.jsx)(n.a,{href:"/advanced/type-formatters",children:"Type Formatters & Printers"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);